<?xml version="1.0" encoding="UTF-8"?>
<action-sequence> 
  <title>Local Invoice Manager</title>
  <version>1</version>
  <logging-level>ERROR</logging-level>
  <documentation> 
    <author>chinhnguyen</author>  
    <description>Empty blank action sequence document</description>  
    <help/>  
    <result-type/>  
    <icon/> 
  </documentation>

  <inputs> 
    <actions type="string"> 
      <sources> 
        <request>actions</request> 
      </sources>  
      <default-value><![CDATA[template]]></default-value> 
    </actions>  
    <returnResult type="string"> 
      <sources> 
        <request>returnResult</request> 
      </sources>  
      <default-value/> 
    </returnResult>  
    <query_result type="result-set"> 
      <sources> 
        <request>query_result</request> 
      </sources>  
      <default-value/> 
    </query_result>  
    <connectionName type="string"> 
      <sources> 
        <request>connectionName</request> 
      </sources>  
      <default-value><![CDATA[dw5financial]]></default-value> 
    </connectionName>  
    <p_month_year type="string"> 
      <sources> 
        <request>p_month_year</request> 
      </sources>  
      <default-value><![CDATA[0813]]></default-value> 
    </p_month_year>  
    <p_inv_detail_id type="string"> 
      <sources> 
        <request>p_inv_detail_id</request> 
      </sources>  
      <default-value/> 
    </p_inv_detail_id>  
    <data type="string"> 
      <sources> 
        <request>data</request> 
      </sources>  
      <default-value><![CDATA[html]]></default-value> 
    </data>  
    <exportType type="string"> 
      <sources> 
        <request>exportType</request> 
      </sources>  
      <default-value><![CDATA[html]]></default-value> 
    </exportType>  
    <reportEmailTo type="string"> 
      <sources> 
        <request>reportEmailTo</request> 
      </sources>  
      <default-value><![CDATA[chinh.nguyen@ecepvn.org]]></default-value> 
    </reportEmailTo>  
    <p_account_name type="string"> 
      <sources> 
        <request>p_account_name</request> 
      </sources>  
      <default-value/> 
    </p_account_name>  
    <reportEmailContent type="string"> 
      <sources> 
        <request>reportEmailContent</request> 
      </sources>  
      <default-value><![CDATA[Hello,<p/> This is the testing email<br/>Please review and feeback to nhut@vervemobile.com.<p/>Thanks!]]></default-value> 
    </reportEmailContent> 
  </inputs>

  <outputs> 
    <returnResult type="string"> 
      <destinations> 
        <response>content</response> 
      </destinations> 
    </returnResult> 
  </outputs>

  <resources> 
    <report-definition> 
      <solution-file> 
        <location>local_invoice_manager/local_invoice_summary_report/local_invoice_summary_report.jasper</location>  
        <mime-type>text/plain</mime-type> 
      </solution-file> 
    </report-definition>  
    <report-definition1> 
      <solution-file> 
        <location>local_invoice_manager/local_invoice_report/local_invoice_report.jasper</location>  
        <mime-type>text/plain</mime-type> 
      </solution-file> 
    </report-definition1>  
    <report-definition2> 
      <solution-file> 
        <location>local_invoice_manager/local_invoice_report/local_invoice_report.jasper</location>  
        <mime-type>text/plain</mime-type> 
      </solution-file> 
    </report-definition2>  
    <report-definition3> 
      <solution-file> 
        <location>local_invoice_manager/local_invoice_report/local_invoice_report.jasper</location>  
        <mime-type>text/plain</mime-type> 
      </solution-file> 
    </report-definition3> 
  </resources>
  
  <actions> 
    <actions> 
      <condition><![CDATA[actions=='template']]></condition>  
      <action-definition> 
        <component-name>TemplateComponent</component-name>
        <action-type>Message Template</action-type>
        <action-outputs> 
          <output-message type="string" mapping="returnResult"/> 
        </action-outputs>
        <component-definition> 
          <template><![CDATA[<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Local Invoice manager</title>
<link rel="stylesheet" type="text/css"
	href="/verve-lib/scripts/bootstrap-3.0.0/css/bootstrap.min.css" />
<link href="/verve-lib/scripts/bootstrap-3.0.0/blugins/font-awesome/css/font-awesome.css" rel="stylesheet" />

<script src="/verve-lib/scripts/jquery-2.0.min.js"></script>
<script type="text/javascript" src="/verve-lib/scripts/bootstrap-3.0.0/js/bootstrap.min.js"></script>
<script type="text/javascript"	src="/verve-lib/scripts/bootstrap-3.0.0/blugins/moment.min.js"></script>
<script type="text/javascript"	src="/verve-lib/scripts/bootstrap-3.0.0/blugins/jquery.validate.bootstrap.popover.min.js"></script>
<script type="text/javascript"	src="/verve-lib/scripts/bootstrap-3.0.0/blugins/jquery.validate.min.js"></script>
<script type="text/javascript"	src="/verve-lib/scripts/bootstrap-3.0.0/blugins/bootbox.min.js"></script>
<script src="/verve-lib/scripts/async-master/lib/async.js"></script>

<script type="text/javascript" src="/verve-lib/scripts/bootstrap-3.0.0/myUtils.js"></script>

<style>
div.first-tab {
	margin-top: 80px;
	margin-bottom: 30px;
}

#mainDataTable {
	margin: 0px;
	border: 0px;
}

#mainDataTable thead tr th {
	border-bottom: 0px;
	border-right: 0px;
}

#mainDataTable thead tr th a {
	color: #4572A7;
}

#mainDataTable thead tr th span {
	float: right;
}

#mainDataTable thead tr th.sort,#mainDataTable thead tr th.sort a {
	background-color: #39b3d7;
	color: white;
}

#mainDataTable thead tr:first-child th:first-child {
	border-left: 0px;
}

#mainDataTable tbody tr td {
	border-left: 0px;
	border-bottom: 0px;
}

#mainDataTable tbody tr td.right {
	text-align: right;
}

.loading{
background-image: url("http://www.oenovaults.com/images/loading.gif");
background-repeat: no-repeat;
background-position: center;
background-size: 50px 50px;
}
</style>
</head>
<body>
	<nav class="navbar navbar-default navbar-fixed-top" role="navigation">
		<!-- Brand and toggle get grouped for better mobile display -->
		<div class="navbar-header">
			<button type="button" class="navbar-toggle" data-toggle="collapse"data-target="navbar-ex1-collapse">
				<span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span
					class="icon-bar"></span>
			</button>
			<a class="navbar-brand" href="#"><span class="icon-stack">
					<i class="icon-circle icon-stack-base"></i> <i class="icon-usd icon-light"></i>
			</span>Local Invoice</a>			
		</div>

		<!-- Collect the nav links, forms, and other content for toggling -->
		<div class="collapse navbar-collapse navbar-ex1-collapse">
			<form novalidate="novalidate" id="topForm" class="navbar-form navbar-left" role="search"	style="margin-top: 20px;">
				<div class="form-group">
					<select style="width: 100px;" id="listMonth" onchange="loadSummaryReport();loadInvoiceDetail();"	class="form-control input-sm" name="month-year"></select>
				</div>	
			</form>
			<form novalidate="novalidate" id="exportSummary_bt" class="navbar-form navbar-right" role="search"	style="margin-top: 20px;display: none;">
				<div class="form-group">
					<div  class="btn-group btn-group-sm " style="float: right;">
					  <button type="button" class="btn btn-primary">Export</button>
					  <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
					    <span class="caret"></span>
					  </button>
					  <ul class="dropdown-menu" role="menu">
					    <li><a href="#" onclick="exportSummaryReport('xls');"> <i class="fa fa-cog"></i>XLS</a></li>
					    <li><a href="#" onclick="exportSummaryReport('pdf')"> PDF</a></li>
					  </ul>
					</div>
				</div>	
			</form>
			<form novalidate="novalidate" id="topForm" class="navbar-form navbar-right" role="search"	style="margin-top: 20px;">
				<div class="form-group">
					<input name="publichToEmail" style="width: 200px;display: none;" class="email form-control input-sm" type="text" placeholder="Email to publish invoice">
				</div>
				<div class="form-group">
					<button type="button" title="publish-report" style="display: none;"
						class="btn btn-sm btn-primary" onclick="confirmPublishReports();">
						<i class="icon-external-link"></i> Publish Report
					</button>
				</div>		
			</form>

		</div>
		<!-- /.navbar-collapse -->
	</nav>
	<div class="container first-tab theme-showcase " id="page-tab">
		<ul class="nav nav-tabs">
			<li title="summary" class="active"><a href="#"
				onclick="showSummaryTab();">Summary</a></li>
			<li title="invoice-detail"><a href="#" onclick="showInvoiceDetail();">Invoice Detail</a></li>
		</ul>
	</div>

	<div class="container" id="main-content">

		<div id="summary-content" style="min-height: 200px;" class="loading">

		<div class="content"></div>		
		</div>
		<div id="invoice-detail" style="display: none;min-height: 200px;"></div>
	</div>
<!-- Modal Publishing Status-->

<!-- /.modal -->
	<script>
var globalTimeout=null;
function delay_timeout(second_time,func){
	if(globalTimeout != null) clearTimeout(globalTimeout); 
	globalTimeout =setTimeout(function(){func();},second_time);
}
		//this function paser param from url
		function gup(name) {
			name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
			var regexS = "[\\?&]" + name + "=([^&#]*)";
			var regex = new RegExp(regexS);
			var results = regex.exec(window.location.href);
			if (results == null)
				return "";
			else
				return results[1];
		}

		var solution = gup('solution');
		var path = gup('path');
		var rootPath = 'ViewAction?solution=' + solution + '&path=' + path
				+ '&action=localInvoiceManager.xaction';
		var rootSubPath = 'ViewAction?solution=' + solution + '&path=' + path
				+ '/subscriptionManager';

		// end process start date , end date 
		$(document).ready(function() {
			console.log("ready!");
			console.log("jQuery verion: " + jQuery.fn.jquery);
			initProcessingPage();
			loadMonthList();
		});

		//*******************************
		// Script code on Processing page
		//*******************************
		var initProcessingPage = function() {
		};

		var loadSummaryReport = function() {
			var monthYear = $('select[name=month-year]').val();
			$('#summary-content').addClass('loading');
			$('#exportSummary_bt').hide();
			$('#summary-content div.content').empty();
			$('#summary-content div.content').load(	rootPath + '&actions=summaryReport&p_month_year='+ monthYear,function(){
				$('#summary-content').removeClass('loading');
				$('#exportSummary_bt').show();
			});
		}
		var exportSummaryReport=function(exportType){
			var monthYear = $('select[name=month-year]').val();
			var urlExport=rootPath + '&actions=summaryReportExport&exportType='+exportType+'&p_month_year='+ monthYear;
			window.open(urlExport);
		}
		var loadInvoiceDetail = function() {
			var monthYear = $('select[name=month-year]').val();
			$('#invoice-detail').empty();
			$('#invoice-detail').addClass('loading');
			$('#invoice-detail').load(rootPath + '&actions=template2&p_month_year=' + monthYear,function(){
				$('#invoice-detail').removeClass('loading');
			});
			//dataDetail=[];
		}

		//for tab select
		var showSummaryTab = function() {
			$('#summary-content').show();
			$('#invoice-detail').hide();
			$('input[name=publichToEmail]').hide();
			$('#page-tab ul li').removeClass('active');
			$('#page-tab ul li[title=summary]').addClass('active');
			$('button[title=publish-report]').hide();
			$('#exportSummary_bt').show();
		}
		var showInvoiceDetail = function() {
			$('#summary-content').hide();
			$('#invoice-detail').show();
			$('input[name=publichToEmail]').show();
			$('#page-tab ul li').removeClass('active');
			$('#page-tab ul li[title=invoice-detail]').addClass('active');
			$('button[title=publish-report]').show();
			$('#exportSummary_bt').hide();
		}
		
		//load list month value
		function loadMonthList(){
			console.log('Load list of month');
			var urlLoad=rootPath+'&action=localInvoiceManager.xaction&actions=listMonth&data=json';
			var data=[];
			$.ajax({
				url : urlLoad,
				dataType : 'json',
				success : function(json) {
					data = json;
					var rows=[];
					for(var i=0;i<data.length;i++){
						var value=data[i].value;
						var name=data[i].name;
						var row='<option value="'+value+'">'+name+'</option>';
						rows.push(row);
					}
					$('#listMonth').empty();
					$('#listMonth').append(rows.join(""));
					// Load summary report 
					loadSummaryReport();
					// Load invoice list
					loadInvoiceDetail();
				}
			});
		}
	// dataDetail=[{invoide_id: 12345,data: 'html code'}]
	var dataDetail=[];
	function addContentOfInvoideToDataDetail(invoide_id,content_html){
		var isHasInDataDetail=0;
		for(var i=0;i<dataDetail.length;i++){
			var my_invoide_id=dataDetail[i].invoide_id;			
			if(my_invoide_id==invoide_id){
				isHasInDataDetail=1;
				dataDetail[i].data=content_html;
				console.log("Update content of invoice "+invoide_id+" to dataDetail");
			}
		}
		if(isHasInDataDetail==0){
			var row={invoide_id: invoide_id,data: content_html};
			dataDetail.push(row);
			console.log("Add new content of invoice "+invoide_id+" to dataDetail");
		}
	}
	function getContentFromDataDetail(invoide_id){
		var result;
		for(var i=0;i<dataDetail.length;i++){
			var my_invoide_id=dataDetail[i].invoide_id;			
			if(my_invoide_id==invoide_id){				
				result=dataDetail[i].data;
			}
		}
		console.log("Get content from Data detail of invoice: "+invoide_id);
		//console.log("Result: "+result);
		return result;
	}
	</script>
</body>
</html>]]></template>
        </component-definition> 
      </action-definition>
 
    </actions>
  
    <actions> 
      <condition><![CDATA[actions=='template2']]></condition>  
      <action-definition> 
        <component-name>TemplateComponent</component-name>
        <action-type>Message Template</action-type>
        <action-outputs> 
          <output-message type="string" mapping="returnResult"/> 
        </action-outputs>
        <component-definition> 
          <template><![CDATA[<style>
tr.selected{
background: #F8F8F8;
}
</style>
<div class="panel panel-info">
	<!-- Default panel contents -->
	<div class="panel-heading">Invoice list</div>

	<!-- Table -->
	<table id="mainDataTable"
		class="table table-bordered table-hover table-responsive">
		<thead>
			<tr>
				<th width="10"><input type="checkbox" value="all" /></th>
				<th>ID</th>
				<th>Account Name</th>
				<th>Network Type</th>
				<th>Status</th>
			</tr>
		</thead>
		<tbody>
		</tbody>
	</table>
</div>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog"
	aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal"
					aria-hidden="true">&times;</button>
				<h4 class="modal-title">Invoice Detail</h4>
			</div>
			<div class="modal-body" title=""></div>
			<div class="modal-footer">
				<button type="button" title="s-close" class="btn btn-default" data-dismiss="modal">Close</button>
				<button type="button" title="s-pdf" class="btn btn-warning">Save
					PDF</button>
				<button type="button" title="s-xls" class="btn btn-success">Save
					XLS</button>
			</div>
		</div>
		<!-- /.modal-content -->
	</div>
	<!-- /.modal-dialog -->
</div>
<!-- /.modal -->



<style>
#myModal .modal-dialog {
	width: 800px; /* your width */
}
</style>
<script>

	//Load invoice data
	var data = [];
	var monthYear = $('select[name=month-year]').val();
	$.ajax({
		url : rootPath + '&actions=listInvoiceByMonth&data=json&p_month_year='+ monthYear,
		dataType : 'json',
		data : data,
		success : function(json) {
			data = json;
			setTableData(data);
		}
	});
	function setTableData(data) {
		var i = 0;
		var rows = [];
		for (var i = 0; i < data.length; i++) {

			var urlLoadContentDetail = rootPath
					+ '&actions=invoiceDetail&p_inv_detail_id=' + data[i].id;
			var status = '';
			if (data[i].inv_status == 'PENDING') {
				status = '<span class="label label-warning">'
						+ data[i].inv_status + '</span>';
			} else {
				status = '<span class="label label-success">'
						+ data[i].inv_status + '</span>';
			}
			var checkBox = '';
			if (data[i].inv_status == 'PUBLISHED') {
				checkBox = '<input type="checkbox" disabled value="'+data[i].id+'"/>';
			} else {
				checkBox = '<input type="checkbox" value="'+data[i].id+'"/>';
			}
			var row = '<tr>' + '<td>' + checkBox + '</td>' + '<td>'
					+ data[i].id + '</td>'
					+ '<td><a href="#" onClick="viewInvoiceReportDetail(\''
					+ data[i].id + '\')">' + data[i].account_name + '</a></td>'
					+ '<td>' + data[i].inv_network_type + '</td>' + '<td>'
					+ status + '</td>' + '</tr>';
			rows.push(row);
		}
		var htmlTable = rows.join("");
		//console.log(htmlTable);
		$('#mainDataTable tbody').empty();
		$('#mainDataTable tbody').append(htmlTable);

		//Set check all
		$('#mainDataTable thead input[type=checkbox]:first').change(
				function() {
					var isChecked = $(this).is(':checked');
					console.log(isChecked);
					$('#mainDataTable tbody input:checkbox:not(:disabled)').prop('checked', isChecked);

				});
		//tr click to check box
		$('#mainDataTable tbody tr').click(function() {
			var checkBox = $(this).find('input:checkbox').first();
			var isCheck = checkBox.is(':checked');
			var isDisable= checkBox.is(':disabled');
			if(!isDisable){
				checkBox.prop('checked', !isCheck);
				if(!isCheck){
					$(this).addClass('selected');
				}else{
					$(this).removeClass('selected');
				}
				console.log(isCheck);
			}			
			

		});
	}
	
	//function get row data by invoice ID
	function rowData(invoiceID){
		var rowResult=null;
		for(var i=0;i<data.length;i++){
			row=data[i];
			if(row.id==invoiceID){
				rowResult=row;
			}
		}
		return rowResult;
	}
	
	//click and view invoice report
	function viewInvoiceReportDetail(invoiceID) {
		var monthYear = $('select[name=month-year]').val();
		console.log('View detail report id: ' + invoiceID);
		$('#myModal h4.modal-title').html('Invoice Detail <small>('+invoiceID+')</small>');
		
		$('#myModal div.modal-body').empty();
		$('#myModal div.modal-body').attr('title',invoiceID);
		$('#myModal div.modal-body').html("loading....");	
		
		var html=getContentFromDataDetail(invoiceID);
		if(html!=null){
			$('#myModal div.modal-body').html(html);
		}else{
			$.ajax(rootPath + '&actions=invoiceDetail&p_inv_detail_id='+ invoiceID+'&p_month_year='+monthYear,{
				success: function(data){				
					addContentOfInvoideToDataDetail(invoiceID,data);
					//Set content to modal
					var currentView=$('#myModal div.modal-body').attr('title');
					var html=getContentFromDataDetail(currentView);
					$('#myModal div.modal-body').html(html);
				}			
			});				
		}

		
		$('#myModal').modal('show');
		
		$('#myModal button[title=s-pdf]').unbind('click');
		$('#myModal button[title=s-pdf]').click(function() {		exportInvoiceDetail('pdf', invoiceID);	});
		$('#myModal button[title=s-xls]').unbind('click');
		$('#myModal button[title=s-xls]').click(function() {
			exportInvoiceDetail('xls', invoiceID);
		});
		//close bt
		$('#myModal button[title=s-close]').unbind('click');
		$('#myModal button[title=s-close]').click(function() {		
				
		});

	}
	// click button export invoice report
	function exportInvoiceDetail(exportType, invoiceID) {
		var urlLoadContentDetail = rootPath	+ '&actions=invoiceDetailExport&exportType=' + exportType+ '&p_inv_detail_id=' + invoiceID;
// 		var strName = ("downloader" + (new Date()).getTime());
// 		var jFrame = $("<iframe name=\"" + strName + "\" src=\"about:blank\" />");
// 		jFrame.css("display", "none");
// 		$("body:first").append(jFrame);
// 		jFrame.attr('src', urlLoadContentDetail);
		window.open(urlLoadContentDetail);
	}
	// configure publish report
	function confirmPublishReports(){
		var rows=[];
		
		var listChecked = $('#mainDataTable tbody input:checked');
		
		listChecked.each(function(index,item){
			var id=item.value;
			var account_name=rowData(id).account_name;
			var row=id+' - <b>'+account_name+'</b><br/>';
			rows.push(row);
		});
		if(listChecked.length>0){
			bootbox.dialog({
				message: "Once the report published, it is final. Do you want to continue?<p/>"+rows.join(""),
				title: "Confirm",
				buttons:{    				
					main: {
					      label: "No",
					      className: "btn-info"
				    },
					danger: {
					      label: "Yes",
					      className: "btn-warning",
					      callback: function() {
					    	  publishReports();
					      }
					    }
				}
			});				
		}else{
			
		}
	
	}
 
	//function publish invoice report
	function publishReports() {
		//check validator first
		var emailAddress=$('input[name=publichToEmail]').val();
		console.log('Public invoice to email: '+emailAddress);
		var emailIsOk=isValidEmailAddress(emailAddress);
		console.log('emailIsOk: '+emailIsOk);
		if(emailAddress!='' && !emailIsOk){
			bootbox.dialog({
				message: "Please check your input email!",
				title: "The email is not valid",
				buttons:{
					main: {
					      label: "Ok",
					      className: "btn-primary",
					      callback: function() {
					        
					      }
					    }
				}
			});
			return;
		}
		//init a process dialog status
			var ProcessPublishInvoice=new myProcessDialog({
				title:'Publishing...<small> do not close this window</small>',				
				processBarNowValue: 0
				});
		
		//show publishing modal
		ProcessPublishInvoice.show();
		//change status on publishing buuton
		$('button[title=publish-report]').html('<i class="icon-external-link"></i> Publishing...');
		$('button[title=publish-report]').prop("disabled",true);
		//get listchecked
		var listChecked = $('#mainDataTable tbody input:checked');
		var countCompleted=0;
		ProcessPublishInvoice.setTitle('Publishing...<small> do not close this window</small> ('+countCompleted+'/'+listChecked.length+')');
		console.log('Number reports is pulished: ' + listChecked.length);
		//create ajax sequent to publish invoice
		var functionSequenArray=[];
		listChecked.each(function(index,item){
			var invoiceID=item.value;
			functionSequenArray.push(function(callback){publisherReport(invoiceID,callback);});			
		});
		//call sequent run series
		async.series(functionSequenArray,
		function(err, results) {
		    // results is now equal to: {one: 1, two: 2}
			console.log(" Result1: "+results[0]+" Result2: "+results[1]);
			$('button[title=publish-report]').html('<i class="icon-external-link"></i> Publish Report');
			$('button[title=publish-report]').prop("disabled",false);
			
			//hide publishing modal
			ProcessPublishInvoice.hide();
			if(listChecked.length>0){
				loadInvoiceDetail();
			}
			
			//show status dialog
			var rows=[];
			listChecked.each(function(index,item){
				var status=results[index];
				var invoiceID=item.value;
				var account_name=rowData(invoiceID).account_name;
				if(status=='false'){
					status='<span class="label label-danger">False</span>';
				}else{
					status='<span class="label label-success">Success</span>';
				}
				var row=invoiceID+' - <b>'+account_name+'</b> '+status+'<br/>';
				rows.push(row);
			});
			bootbox.dialog({
				message: rows.join(""),
				title: "Result of publish process",
				buttons:{
					main: {
					      label: "Close",
					      className: "btn-success"
					    }
				}
			});
		});
		//function public each invoice
		function publisherReport (invoiceID,callback){
			var monthYear = $('select[name=month-year]').val();
			var account_name=rowData(invoiceID).account_name;
			var urlLoadContentDetail = rootPath+'&data=json&actions=publish&p_inv_detail_id='+invoiceID+'&p_month_year='+monthYear+'&p_account_name='+account_name;
			if(emailAddress!='' && emailIsOk){
				urlLoadContentDetail+='&reportEmailTo='+emailAddress;
			}
			// an example using an object instead of an array
			var callBackValue='false';
			$.ajax({
				  url: urlLoadContentDetail,
				  dataType: 'json',
				  async: true,
				  beforeSend: function(){
					  console.log('Publish report '+invoiceID);
					  ProcessPublishInvoice.setAlertInfo(account_name+" <br/>Invoice ID "+ invoiceID);
				  },
				  success: function(data){
					  console.log('Publish report '+invoiceID+' is ok');
					  callBackValue='successful';					  
				  },
				  error: function(){
					  console.log('Publish report '+invoiceID+' is error');
					  ProcessPublishInvoice.setAlertDanger('Can\'t publish invoice '+invoiceID+' to '+account_name+' <p/>Publish Error!');
					  
				  },
				  complete: function(){
					  countCompleted++;		
					  ProcessPublishInvoice.setTitle('Publishing...<small> do not close this window</small> ('+countCompleted+'/'+listChecked.length+')');
					  ProcessPublishInvoice.setProcessBarValue(countCompleted*100/listChecked.length);
					  setTimeout(function(){
						  callback(null,callBackValue);
					  },1000);				  
				  }
				});

		}
	};



</script>]]></template>
        </component-definition> 
      </action-definition>
 
    </actions>
  
    <actions> 
      <condition><![CDATA[actions=='summaryReport']]></condition>  
      <action-definition> 
        <component-name>JasperReportsComponent</component-name>
        <action-type>Jasper</action-type>
        <action-inputs> 
          <jndi type="string" mapping="connectionName"/>  
          <p_month_year type="string"/> 
        </action-inputs>
        <action-resources> 
          <report-definition type="resource"/> 
        </action-resources>
        <action-outputs> 
          <report-output type="content" mapping="returnResult"/> 
        </action-outputs>
        <component-definition> 
          <output-type>html</output-type> 
        </component-definition> 
      </action-definition>
 
    </actions>
  
    <actions> 
      <condition><![CDATA[actions=='summaryReportExport']]></condition>  
      <action-definition> 
        <component-name>JasperReportsComponent</component-name>
        <action-type>Jasper</action-type>
        <action-inputs> 
          <p_month_year type="string"/>  
          <output-type type="string" mapping="exportType"/>  
          <jndi type="string" mapping="connectionName"/> 
        </action-inputs>
        <component-definition/> 
      </action-definition>
 
    </actions>
  
    <actions> 
      <condition><![CDATA[actions=='invoiceDetail']]></condition>  
      <action-definition> 
        <component-name>JasperReportsComponent</component-name>
        <action-type>Jasper</action-type>
        <action-inputs> 
          <jndi type="string" mapping="connectionName"/>  
          <p_month_year type="string"/>  
          <p_inv_detail_id type="string"/> 
        </action-inputs>
        <action-resources> 
          <report-definition mapping="report-definition1"/> 
        </action-resources>
        <action-outputs> 
          <report-output type="content" mapping="returnResult"/> 
        </action-outputs>
        <component-definition> 
          <output-type><![CDATA[html]]></output-type> 
        </component-definition> 
      </action-definition>
 
    </actions>
  
    <actions> 
      <condition><![CDATA[actions=='invoiceDetailExport']]></condition>  
      <action-definition> 
        <component-name>JasperReportsComponent</component-name>
        <action-type>Jasper</action-type>
        <action-inputs> 
          <jndi type="string" mapping="connectionName"/>  
          <p_month_year type="string"/>  
          <p_inv_detail_id type="string"/>  
          <output-type type="string" mapping="exportType"/> 
        </action-inputs>
        <action-resources> 
          <report-definition mapping="report-definition2"/> 
        </action-resources>
        <component-definition/> 
      </action-definition>
 
    </actions>
  
    <actions> 
      <condition><![CDATA[actions=='listMonth']]></condition>  
      <action-definition> 
        <component-name>SQLLookupRule</component-name>
        <action-type>Relational</action-type>
        <action-inputs> 
          <jndi type="string" mapping="connectionName"/> 
        </action-inputs>
        <action-outputs> 
          <query-result type="result-set" mapping="query_result"/> 
        </action-outputs>
        <component-definition> 
          <live><![CDATA[false]]></live>  
          <query><![CDATA[SELECT inv_mmyy as value,to_char(to_date(inv_mmyy, 'MMYY'),'Mon YYYY') as name FROM accounting.ba_inv_detail GROUP BY inv_mmyy ORDER BY name desc;]]></query> 
        </component-definition> 
      </action-definition>
 
    </actions>
  
    <actions> 
      <condition><![CDATA[actions=='listInvoiceByMonth']]></condition>  
      <action-definition> 
        <component-name>SQLLookupRule</component-name>
        <action-type>Relational</action-type>
        <action-inputs> 
          <jndi type="string" mapping="connectionName"/>  
          <p_month_year type="string"/> 
        </action-inputs>
        <action-outputs> 
          <query-result type="result-set" mapping="query_result"/> 
        </action-outputs>
        <component-definition> 
          <query><![CDATA[SELECT b.id,b.account_id,c.name as "account_name",b.inv_network_type,b.inv_status FROM accounting.ba_inv_detail b
INNER JOIN accounting.ba_account c
on(c.is_active=1 and c.id = b.account_id)
WHERE b.inv_mmyy='{p_month_year}']]></query>  
          <live><![CDATA[false]]></live> 
        </component-definition> 
      </action-definition>
 
    </actions>
  
    <actions> 
      <condition><![CDATA[actions=='publish']]></condition>  
      <action-definition> 
        <component-name>SQLLookupRule</component-name>
        <action-type>Load invoice status</action-type>
        <action-inputs> 
          <p_inv_detail_id type="string"/>  
          <p_month_year type="string"/>  
          <jndi type="string" mapping="connectionName"/> 
        </action-inputs>
        <action-outputs> 
          <query-result type="result-set" mapping="query_result_invoice_status"/> 
        </action-outputs>
        <component-definition> 
          <query><![CDATA[SELECT inv_status FROM accounting.ba_inv_detail WHERE inv_mmyy='{p_month_year}' AND id='{p_inv_detail_id}']]></query>  
          <live><![CDATA[false]]></live> 
        </component-definition> 
      </action-definition>
  
      <action-definition> 
        <component-name>JavascriptRule</component-name>
        <action-type>JavaScript Set email value</action-type>
        <action-inputs> 
          <p_inv_detail_id type="string"/>  
          <p_month_year type="string"/>  
          <p_account_name type="string"/>  
          <query_result_invoice_status type="result-set"/>  
          <reportEmailContent type="string"/> 
        </action-inputs>
        <action-outputs> 
          <reportNameXls type="string"/>  
          <reportNamePdf type="string"/>  
          <emailTitle type="string"/>  
          <emailMessage type="string"/>  
          <invoiceStatus type="string"/> 
        </action-outputs>
        <component-definition> 
          <script><![CDATA[var reportNamePdf='';
var reportNameXls='';
var emailTitle=p_inv_detail_id+'-'+p_account_name+'-'+p_month_year;
reportNamePdf=p_inv_detail_id+'-'+p_account_name+'-'+p_month_year+'.pdf';
reportNameXls=p_inv_detail_id+'-'+p_account_name+'-'+p_month_year+'.xls';
var emailMessage=reportEmailContent;
var invoiceStatus=query_result_invoice_status.getValueAt(0,0);]]></script> 
        </component-definition> 
      </action-definition>
  
      <action-definition> 
        <component-name>JasperReportsComponent</component-name>
        <action-type>Jasper export pdf</action-type>
        <action-inputs> 
          <jndi type="string" mapping="connectionName"/>  
          <p_month_year type="string"/>  
          <p_inv_detail_id type="string"/> 
        </action-inputs>
        <action-resources> 
          <report-definition mapping="report-definition3"/> 
        </action-resources>
        <action-outputs> 
          <report-output type="content" mapping="reportOutput"/> 
        </action-outputs>
        <component-definition> 
          <output-type><![CDATA[pdf]]></output-type> 
        </component-definition> 
      </action-definition>
  
      <actions> 
        <condition><![CDATA[invoiceStatus=='PENDING']]></condition>  
        <action-definition> 
          <component-name>EmailComponent</component-name>
          <action-type>E-Mail</action-type>
          <action-inputs> 
            <to type="string" mapping="reportEmailTo"/>  
            <reportOutput type="content"/>  
            <attach_name_1 type="string" mapping="reportNamePdf"/>  
            <subject type="string" mapping="emailTitle"/>  
            <message-html type="string" mapping="emailMessage"/> 
          </action-inputs>
          <component-definition> 
            <attachment-ref name-param="attach_name_1" input-param="reportOutput"/> 
          </component-definition> 
        </action-definition>
  
        <action-definition> 
          <component-name>SQLExecute</component-name>
          <action-type>Update publish status</action-type>
          <action-inputs> 
            <jndi type="string" mapping="connectionName"/>  
            <p_inv_detail_id type="string"/>  
            <p_month_year type="string"/> 
          </action-inputs>
          <component-definition> 
            <force_single_statement><![CDATA[true]]></force_single_statement>  
            <query><![CDATA[UPDATE accounting.ba_inv_detail SET inv_status ='PUBLISHED' WHERE inv_mmyy='{p_month_year}' AND id='{p_inv_detail_id}';]]></query> 
          </component-definition> 
        </action-definition>
 
      </actions>
 
    </actions>
  
    <action-definition> 
      <component-name>JavascriptRule</component-name>
      <action-type>Process data grid</action-type>
      <action-inputs> 
        <actions type="string"/>  
        <returnResult type="string"/>  
        <query_result type="result-set"/>  
        <data type="string"/> 
      </action-inputs>
      <action-outputs> 
        <returnResult type="string"/> 
      </action-outputs>
      <component-definition> 
        <script><![CDATA[var result_set=query_result;
var rowCount=query_result.getRowCount();
var meta = result_set.getMetaData();      // Returns an IPentahoMetaData object
var colCount = meta.getColumnCount();
var colHeaders = meta.getColumnHeaders(); //getColumnHeaders() returns object[][]
var rowHeaders = meta.getRowHeaders(); 

if(data=='html'){
	returnResult=returnResult;
}else{
	returnResult='[';
	//process data item
	for(var i=0;i<result_set.getRowCount();i++){
		var item='';
		if(i>0){
			item+=',';
		}
		item+='{';
			for(var j=0;j<result_set.getColumnCount();j++){ 		
				var value=result_set.getValueAt(i,j);
				var columnValue=colHeaders[0][j];
				if(j>0){
					item+=',';
				}
				item+='"'+columnValue+'":"'+value+'"';
			}
		item+='}';	

	returnResult+=item;
	}
	//end

	returnResult+=']';
}]]></script> 
      </component-definition> 
    </action-definition>
 
  </actions> 
</action-sequence>